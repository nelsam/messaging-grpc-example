# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import instant_messaging_service_pb2 as instant__messaging__service__pb2
import message_pb2 as message__pb2


class InstantMessageServiceStub(object):
  """InstantMessageService can give us access to real time messages!
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Send = channel.unary_unary(
        '/messaging.InstantMessageService/Send',
        request_serializer=instant__messaging__service__pb2.AuthedIM.SerializeToString,
        response_deserializer=message__pb2.Message.FromString,
        )
    self.Connect = channel.unary_stream(
        '/messaging.InstantMessageService/Connect',
        request_serializer=instant__messaging__service__pb2.ConnectAuth.SerializeToString,
        response_deserializer=message__pb2.Message.FromString,
        )


class InstantMessageServiceServicer(object):
  """InstantMessageService can give us access to real time messages!
  """

  def Send(self, request, context):
    """Send sends a message to a user.  We don't use streaming here
    because grpc-web doesn't handle client-side streaming.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Connect(self, request, context):
    """Connect connects to an IM session with a user.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_InstantMessageServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Send': grpc.unary_unary_rpc_method_handler(
          servicer.Send,
          request_deserializer=instant__messaging__service__pb2.AuthedIM.FromString,
          response_serializer=message__pb2.Message.SerializeToString,
      ),
      'Connect': grpc.unary_stream_rpc_method_handler(
          servicer.Connect,
          request_deserializer=instant__messaging__service__pb2.ConnectAuth.FromString,
          response_serializer=message__pb2.Message.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'messaging.InstantMessageService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
