// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package messaging is a generated protocol buffer package.

It is generated from these files:
	message.proto
	message_service.proto
	user.proto
	user_service.proto

It has these top-level messages:
	Message
	Thread
	AuthedMessage
	ThreadReply
	Ident
	Profile
	AuthedProfile
*/
package messaging

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Message is a message from one user to another
type Message struct {
	// id is the message's unique ID.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// from is the user the message was sent from.
	From *Profile `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	// to is the user the message was sent to.
	To *Profile `protobuf:"bytes,3,opt,name=to" json:"to,omitempty"`
	// title is the message's title.
	Title string `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	// body is the message's body.
	Body string `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetFrom() *Profile {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Message) GetTo() *Profile {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Message) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

// Thread is a sequence of messages from one user to another
type Thread struct {
	// id is the thread's unique ID.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// messages is the list of messages in the thread.
	Messages []*Message `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
}

func (m *Thread) Reset()                    { *m = Thread{} }
func (m *Thread) String() string            { return proto.CompactTextString(m) }
func (*Thread) ProtoMessage()               {}
func (*Thread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Thread) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Thread) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "messaging.Message")
	proto.RegisterType((*Thread)(nil), "messaging.Thread")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x70, 0x33, 0xf3, 0xd2,
	0xa5, 0xb8, 0x4a, 0x8b, 0x53, 0x8b, 0x20, 0xc2, 0x4a, 0xfd, 0x8c, 0x5c, 0xec, 0xbe, 0x10, 0x85,
	0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x4c, 0x99, 0x29,
	0x42, 0x6a, 0x5c, 0x2c, 0x69, 0x45, 0xf9, 0xb9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x42,
	0x7a, 0x70, 0x13, 0xf4, 0x02, 0x8a, 0xf2, 0xd3, 0x32, 0x73, 0x52, 0x83, 0xc0, 0xf2, 0x42, 0x4a,
	0x5c, 0x4c, 0x25, 0xf9, 0x12, 0xcc, 0x38, 0x55, 0x31, 0x95, 0xe4, 0x0b, 0x89, 0x70, 0xb1, 0x96,
	0x64, 0x96, 0xe4, 0xa4, 0x4a, 0xb0, 0x80, 0x8d, 0x87, 0x70, 0x84, 0x84, 0xb8, 0x58, 0x92, 0xf2,
	0x53, 0x2a, 0x25, 0x58, 0xc1, 0x82, 0x60, 0xb6, 0x92, 0x07, 0x17, 0x5b, 0x48, 0x46, 0x51, 0x6a,
	0x62, 0x0a, 0x86, 0x7b, 0xf4, 0xb8, 0x38, 0xa0, 0x7e, 0x2a, 0x96, 0x60, 0x52, 0x60, 0x46, 0xb3,
	0x0d, 0xea, 0x8b, 0x20, 0xb8, 0x9a, 0x24, 0x36, 0xb0, 0x17, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xe3, 0x9a, 0xbd, 0xea, 0x0a, 0x01, 0x00, 0x00,
}
